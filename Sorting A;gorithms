import java.util.Arrays;
public class Main 
{
    
    public static void Printarr(int arr[])
    {
        for(int i=0;i<arr.length;i++)
        {
            System.out.print(" "+arr[i]);
        }
       System.out.println("");
    }
    
    
    public static void Bubblesort(int arr[])    //BUBBLE SORTING USING SWAP AND N-1 ARRAYSIZE WITH 2 LOOPS FOR SWAPING 
    {
        int n = arr.length-1;
        for(int i=0;i<n;i++)
        {
            int swap=0;
            for(int j=0;j<n-i;j++)
            {
                if(arr[j]>arr[j+1])
                {
                    int temp = arr[j];
                    arr[j]=arr[j+1];
                    arr[j+1]= temp;
                    swap++;
                }
             }    
             if(swap==0)
                {
                   break;
                }
        }
    }
    
    public static void selectionsort(int arr[])    // SELECTIONSORT USE 2 LOOPS STARTIING FROM i=0 to j=i+1  WITH ARRAY SIZE TILL N
    { 
        int n = arr.length;
        for(int i=0;i<n;i++)
        { 
            int min = i;
            for(int j=i+1;j<n;j++)
            {
                while(arr[j]<arr[min])
                {
                   min = j;
                }
            }
            int temp = arr[min];
            arr[min]=arr[i];
            arr[i]=temp;
        }
    }
    
    
    
    public static void insertionsort(int arr[])   // A TEMP variable  STRORES i VALUE  aAND COMPAESION B/W j AND j-1...
    {                                          // CURRENT VALUE WITH PREVIOUS VALUES TILL IT GET 0
         int n = arr.length;
        for(int i=1;i<n;i++)
        {
            int temp = arr[i];           
            int j = i-1;
            while(j>=0 && arr[j]>temp)
            {
                arr[j+1]=arr[j];
                j--;
            }
            arr[j+1]=temp;
        }
    }
    public static void countsort(int arr[])       
    {
        int max = Integer.MIN_VALUE;
        int n = arr.length;                // FIND MAXIMUM NUMBER 
        for(int i =0;i<n;i++)
        {
            max = Math.max(arr[i],max);
        }
        int count[] = new int[max+1];       // increase by 1 since 0 should also be considerd for aarray.
        for(int i=0;i<n;i++)
        {                                   //COUNT LOOP
            count[arr[i]]++;
        }
        int j=0;
        for(int i=0;i<count.length;i++)           // SIZE IS MAXIMUM NUMBER +1 
        {
            while(count[i]>0)    // repeating value also get sorted here
            {
                arr[j]=i;
                j++;
                count[i]--;
            }
        }
    }
    public static void Arraysort(int arr[])
    {
        Arrays.sort(arr);
    }
     public static void main (String[] args) 
    {
        int arr[]={4, 5, 6, 7, 0, 1, 2};
        Printarr(arr);
       // selectionsort(arr);
       Arraysort(arr);
        Printarr(arr); 
    }
}
